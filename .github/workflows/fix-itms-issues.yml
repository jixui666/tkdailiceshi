name: Fix TikTok ITMS Issues

on:
  workflow_dispatch:
    inputs:
      ipa_url:
        description: 'IPA文件下载链接 (可选，如果仓库中有Payload文件夹则留空)'
        required: false
        type: string
      fix_encryption:
        description: '修复加密问题'
        required: false
        default: true
        type: boolean
      fix_pie:
        description: '修复PIE问题'
        required: false
        default: true
        type: boolean
      create_ipa:
        description: '创建修复后的IPA'
        required: false
        default: true
        type: boolean

jobs:
  fix-itms-issues:
    runs-on: macos-latest
    timeout-minutes: 30
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
      
    - name: Setup Xcode
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: 'latest-stable'

    - name: Install Dependencies with Retry
      run: |
        set -e
        
        # 安装Python依赖 - 添加重试机制
        echo "安装Python依赖..."
        for i in {1..3}; do
          if pip install --upgrade pip setuptools wheel; then
            echo "✅ pip升级成功"
            break
          else
            echo "⚠️ pip升级失败，第 $i 次重试..."
            sleep 5
          fi
        done
        
        # 安装Xcode命令行工具
        echo "检查Xcode命令行工具..."
        xcode-select --install 2>/dev/null || echo "Xcode命令行工具已安装"
        
        # 安装optool - 添加重试机制
        echo "安装optool..."
        for i in {1..3}; do
          if brew install optool 2>/dev/null || echo "optool已存在"; then
            echo "✅ optool安装成功"
            break
          else
            echo "⚠️ optool安装失败，第 $i 次重试..."
            sleep 5
          fi
        done
        
        # 验证工具
        echo "验证工具安装..."
        python3 --version
        which codesign || echo "codesign not found"
        which otool || echo "otool not found"
        which optool || echo "optool not found"
        which PlistBuddy || echo "PlistBuddy not found"

    - name: Download IPA (if URL provided)
      if: ${{ github.event.inputs.ipa_url != '' }}
      run: |
        echo "下载IPA文件: ${{ github.event.inputs.ipa_url }}"
        curl -L -o TikTok.ipa "${{ github.event.inputs.ipa_url }}"
        unzip TikTok.ipa
        ls -la

    - name: Check Payload Directory
      run: |
        echo "检查Payload目录..."
        if [ -d "Payload" ]; then
          echo "✅ 找到Payload目录"
          ls -la Payload/
          if [ -d "Payload/TikTok.app" ]; then
            echo "✅ 找到TikTok.app"
            ls -la "Payload/TikTok.app/" | head -20
          else
            echo "❌ 未找到TikTok.app"
            exit 1
          fi
        else
          echo "❌ 未找到Payload目录"
          echo "当前目录内容:"
          ls -la
          exit 1
        fi

    - name: Backup Original Files
      run: |
        echo "备份原始文件..."
        cp -r Payload Payload_backup
        echo "✅ 备份完成"

    - name: Fix Info.plist (ITMS-90208)
      run: |
        echo "修复Info.plist中的最小OS版本..."
        INFO_PLIST="Payload/TikTok.app/Info.plist"
        
        if [ -f "$INFO_PLIST" ]; then
          # 读取当前版本
          CURRENT_VERSION=$(PlistBuddy -c "Print :MinimumOSVersion" "$INFO_PLIST" 2>/dev/null || echo "未设置")
          echo "当前MinimumOSVersion: $CURRENT_VERSION"
          
          # 设置为14.0
          PlistBuddy -c "Set :MinimumOSVersion 14.0" "$INFO_PLIST" 2>/dev/null || \
          PlistBuddy -c "Add :MinimumOSVersion string 14.0" "$INFO_PLIST"
          
          NEW_VERSION=$(PlistBuddy -c "Print :MinimumOSVersion" "$INFO_PLIST")
          echo "✅ 已更新MinimumOSVersion为: $NEW_VERSION"
        else
          echo "❌ 未找到Info.plist文件"
        fi

    - name: Run Python Fix Script
      run: |
        echo "运行Python修复脚本..."
        python3 fix_itms_issues.py \
          --payload-dir "Payload" \
          --fix-encryption=${{ github.event.inputs.fix_encryption }} \
          --fix-pie=${{ github.event.inputs.fix_pie }} \
          --create-ipa=${{ github.event.inputs.create_ipa }} \
          --verbose

    - name: Run Shell Fix Script
      run: |
        echo "运行Shell修复脚本..."
        chmod +x fix_tiktok_itms.sh
        ./fix_tiktok_itms.sh

    - name: Verify Fixes
      run: |
        echo "验证修复结果..."
        
        # 检查Info.plist
        INFO_PLIST="Payload/TikTok.app/Info.plist"
        if [ -f "$INFO_PLIST" ]; then
          VERSION=$(PlistBuddy -c "Print :MinimumOSVersion" "$INFO_PLIST" 2>/dev/null || echo "未设置")
          echo "✅ MinimumOSVersion: $VERSION"
        fi
        
        # 检查主要二进制文件
        MAIN_BINARY="Payload/TikTok.app/TikTok"
        if [ -f "$MAIN_BINARY" ]; then
          echo "✅ 主二进制文件存在"
          file "$MAIN_BINARY"
          otool -l "$MAIN_BINARY" | grep -A 5 LC_ENCRYPTION_INFO || echo "无加密信息"
        fi
        
        echo "✅ 验证完成"

    - name: Create Fixed IPA
      if: ${{ github.event.inputs.create_ipa == 'true' }}
      run: |
        echo "创建修复后的IPA文件..."
        cd Payload
        zip -r ../TikTok-Fixed.ipa .
        cd ..
        ls -la TikTok-Fixed.ipa
        echo "✅ IPA创建完成"

    - name: Generate Fix Report
      run: |
        echo "生成修复报告..." > fix_report.txt
        echo "=================================" >> fix_report.txt
        echo "TikTok ITMS错误修复报告" >> fix_report.txt
        echo "修复时间: $(date)" >> fix_report.txt
        echo "=================================" >> fix_report.txt
        echo "" >> fix_report.txt
        
        # Info.plist信息
        INFO_PLIST="Payload/TikTok.app/Info.plist"
        if [ -f "$INFO_PLIST" ]; then
          echo "✅ Info.plist修复状态:" >> fix_report.txt
          VERSION=$(PlistBuddy -c "Print :MinimumOSVersion" "$INFO_PLIST" 2>/dev/null || echo "未设置")
          echo "   MinimumOSVersion: $VERSION" >> fix_report.txt
        fi
        
        echo "" >> fix_report.txt
        echo "✅ 修复完成的问题:" >> fix_report.txt
        echo "   - ITMS-90208: 最小OS版本已更新" >> fix_report.txt
        echo "   - ITMS-90125: 已处理二进制加密信息" >> fix_report.txt
        echo "   - ITMS-90180: 已检查插件加密范围" >> fix_report.txt
        
        cat fix_report.txt

    - name: Upload Fixed IPA
      if: ${{ github.event.inputs.create_ipa == 'true' }}
      uses: actions/upload-artifact@v4
      with:
        name: TikTok-Fixed-IPA
        path: TikTok-Fixed.ipa
        retention-days: 30

    - name: Upload Fix Report
      uses: actions/upload-artifact@v4
      with:
        name: Fix-Report
        path: fix_report.txt
        retention-days: 30

    - name: Upload Logs
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: Fix-Logs
        path: |
          *.log
          *.txt
        retention-days: 7 